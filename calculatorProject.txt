<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Simple Calculator</title>
  <style>
    /* Reset and base styles */
    *, *::before, *::after {
      box-sizing: border-box;
    }
    body {
      margin: 0;
      font-family: 'Inter', sans-serif;
      background-color: #ffffff;
      color: #374151;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
      align-items: center;
      justify-content: center;
      padding: 32px 16px;
    }

    h1 {
      font-weight: 700;
      font-size: 3rem;
      margin-bottom: 32px;
      color: #111827;
    }

    .calculator {
      background: #f9fafb;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
      border-radius: 12px;
      width: 320px;
      max-width: 100%;
      padding: 24px;
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      grid-gap: 16px;
    }

    .display {
      grid-column: span 4;
      background: #111827;
      color: #f9fafb;
      font-size: 2.25rem;
      border-radius: 12px;
      padding: 20px;
      text-align: right;
      user-select: none;
      overflow-wrap: break-word;
      min-height: 56px;
      box-shadow: inset 0 -4px 8px rgba(0,0,0,0.3);
      font-variant-numeric: tabular-nums;
    }

    button {
      font-size: 1.25rem;
      background: white;
      border: none;
      border-radius: 12px;
      box-shadow: 0 1px 4px rgba(0,0,0,0.1);
      cursor: pointer;
      padding: 16px 0;
      transition: background-color 0.25s ease, box-shadow 0.25s ease, transform 0.2s ease;
      color: #374151;
      user-select: none;
    }

    button:focus-visible {
      outline: 2px solid #2563eb;
      outline-offset: 4px;
    }

    button:hover {
      background-color: #e0e7ff;
      box-shadow: 0 4px 8px rgba(45, 55, 72, 0.2);
      transform: translateY(-2px);
    }

    button:active {
      transform: translateY(0);
      box-shadow: 0 1px 3px rgba(0,0,0,0.08);
      background-color: #c7d2fe;
    }

    .operator {
      background-color: #4f46e5;
      color: white;
    }

    .operator:hover {
      background-color: #4338ca;
    }

    .equal {
      background-color: #14b8a6;
      color: white;
      grid-column: span 2;
    }

    .equal:hover {
      background-color: #0d9488;
    }

    .clear {
      background-color: #ef4444;
      color: white;
    }

    .clear:hover {
      background-color: #dc2626;
    }

    @media (max-width: 400px) {
      h1 {
        font-size: 2.25rem;
        margin-bottom: 24px;
      }
      .calculator {
        width: 100%;
        grid-gap: 12px;
        padding: 16px;
      }
      button {
        font-size: 1rem;
        padding: 12px 0;
      }
      .display {
        font-size: 1.5rem;
        padding: 16px;
      }
    }
  </style>
</head>
<body>
  <h1>Simple Calculator</h1>
  <div class="calculator" role="application" aria-label="Simple calculator">
    <div id="display" class="display" aria-live="polite" aria-atomic="true">0</div>
    <button type="button" class="clear" aria-label="Clear" id="clear">AC</button>
    <button type="button" aria-label="Toggle sign" id="plus-minus">±</button>
    <button type="button" aria-label="Percent" id="percent">%</button>
    <button type="button" class="operator" aria-label="Divide" data-operator="/">÷</button>

    <button type="button" aria-label="Seven" data-number="7">7</button>
    <button type="button" aria-label="Eight" data-number="8">8</button>
    <button type="button" aria-label="Nine" data-number="9">9</button>
    <button type="button" class="operator" aria-label="Multiply" data-operator="*">×</button>

    <button type="button" aria-label="Four" data-number="4">4</button>
    <button type="button" aria-label="Five" data-number="5">5</button>
    <button type="button" aria-label="Six" data-number="6">6</button>
    <button type="button" class="operator" aria-label="Subtract" data-operator="-">−</button>

    <button type="button" aria-label="One" data-number="1">1</button>
    <button type="button" aria-label="Two" data-number="2">2</button>
    <button type="button" aria-label="Three" data-number="3">3</button>
    <button type="button" class="operator" aria-label="Add" data-operator="+">+</button>

    <button type="button" aria-label="Zero" data-number="0" style="grid-column: span 2;">0</button>
    <button type="button" aria-label="Decimal point" id="decimal">.</button>
    <button type="button" class="equal" aria-label="Equals" id="equals">=</button>
  </div>

  <script>
    (function() {
      const display = document.getElementById('display');
      const clearBtn = document.getElementById('clear');
      const plusMinusBtn = document.getElementById('plus-minus');
      const percentBtn = document.getElementById('percent');
      const decimalBtn = document.getElementById('decimal');
      const equalsBtn = document.getElementById('equals');
      const numberButtons = document.querySelectorAll('button[data-number]');
      const operatorButtons = document.querySelectorAll('button[data-operator]');

      let currentInput = '0';
      let previousInput = null;
      let operator = null;
      let resetNext = false;

      function updateDisplay() {
        display.textContent = currentInput;
      }

      function inputNumber(num) {
        if (resetNext) {
          currentInput = num;
          resetNext = false;
        } else {
          if (currentInput === '0') {
            currentInput = num;
          } else {
            currentInput += num;
          }
        }
        updateDisplay();
      }

      function inputDecimal() {
        if (resetNext) {
          currentInput = '0.';
          resetNext = false;
          updateDisplay();
          return;
        }
        if (!currentInput.includes('.')) {
          currentInput += '.';
          updateDisplay();
        }
      }

      function clearAll() {
        currentInput = '0';
        previousInput = null;
        operator = null;
        resetNext = false;
        updateDisplay();
      }

      function toggleSign() {
        if (currentInput === '0') return;
        if (currentInput.startsWith('-')) {
          currentInput = currentInput.substring(1);
        } else {
          currentInput = '-' + currentInput;
        }
        updateDisplay();
      }

      function percent() {
        let num = parseFloat(currentInput);
        num = num / 100;
        currentInput = String(num);
        updateDisplay();
      }

      function calculate() {
        if (operator === null || previousInput === null) return;
        let result = 0;
        const prev = parseFloat(previousInput);
        const current = parseFloat(currentInput);
        if (isNaN(prev) || isNaN(current)) return;

        switch (operator) {
          case '+':
            result = prev + current;
            break;
          case '-':
            result = prev - current;
            break;
          case '*':
            result = prev * current;
            break;
          case '/':
            if (current === 0) {
              alert('Error: Division by zero');
              clearAll();
              return;
            }
            result = prev / current;
            break;
          default:
            return;
        }

        currentInput = String(result);
        operator = null;
        previousInput = null;
        resetNext = true;
        updateDisplay();
      }

      function setOperator(op) {
        if (operator !== null) {
          calculate();
        }
        previousInput = currentInput;
        operator = op;
        resetNext = true;
      }

      numberButtons.forEach(button => {
        button.addEventListener('click', () => {
          inputNumber(button.dataset.number);
        });
      });

      operatorButtons.forEach(button => {
        button.addEventListener('click', () => {
          setOperator(button.dataset.operator);
        });
      });

      clearBtn.addEventListener('click', clearAll);
      plusMinusBtn.addEventListener('click', toggleSign);
      percentBtn.addEventListener('click', percent);
      decimalBtn.addEventListener('click', inputDecimal);
      equalsBtn.addEventListener('click', calculate);

      // Keyboard support
      window.addEventListener('keydown', (e) => {
        if ((e.key >= '0' && e.key <= '9') || e.key === '.') {
          e.preventDefault();
          if (e.key === '.') inputDecimal();
          else inputNumber(e.key);
        } else if (e.key === '+' || e.key === '-' || e.key === '*' || e.key === '/') {
          e.preventDefault();
          setOperator(e.key);
        } else if (e.key === 'Enter' || e.key === '=') {
          e.preventDefault();
          calculate();
        } else if (e.key === 'Escape') {
          e.preventDefault();
          clearAll();
        }
      });

      updateDisplay();
    })();
  </script>
</body>
</html>

